<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.2.2 (Python 3.13.3 on win32)" generated="2025-05-12T23:47:04.812784" rpa="false" schemaversion="5">
<suite id="s1" name="2.Negative Tests" source="C:\Projects\RobotJMSProject\tests\2.negative_tests.robot">
<kw name="Create Session On Mock Server" owner="keywords" type="SETUP">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-05-12T23:47:05.370783" level="INFO">Creating Session using : alias=jail_mock_api, url=http://localhost:5000, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>jail_mock_api</arg>
<arg>http://localhost:5000</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-05-12T23:47:05.370670" elapsed="0.000278"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-05-12T23:47:05.371141" level="INFO">Session Created Successfully On Mock Server.</msg>
<arg>Session Created Successfully On Mock Server.</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-05-12T23:47:05.371065" elapsed="0.000109"/>
</kw>
<status status="PASS" start="2025-05-12T23:47:05.370070" elapsed="0.001152"/>
</kw>
<test id="s1-t1" name="2.1 Handle Missing Required Fields in Booking Request" line="13">
<kw name="Generate Random Booking Data" owner="keywords">
<kw name="Name" owner="FakerLibrary">
<msg time="2025-05-12T23:47:05.372494" level="INFO">${random_name} = Elizabeth Cantu</msg>
<var>${random_name}</var>
<doc>:example: 'John Doe'</doc>
<status status="PASS" start="2025-05-12T23:47:05.372155" elapsed="0.000361"/>
</kw>
<kw name="Date" owner="FakerLibrary">
<msg time="2025-05-12T23:47:05.372787" level="INFO">${random_date} = 1994-01-15</msg>
<var>${random_date}</var>
<arg>pattern='%Y-%m-%d'</arg>
<doc>Get a date string between January 1, 1970 and now.</doc>
<status status="PASS" start="2025-05-12T23:47:05.372593" elapsed="0.000213"/>
</kw>
<kw name="Random Element" owner="FakerLibrary">
<msg time="2025-05-12T23:47:05.373191" level="INFO">${random_facility} = Create List</msg>
<var>${random_facility}</var>
<arg>${FACILITIES}</arg>
<doc>Generate a randomly sampled object from ``elements``.</doc>
<status status="PASS" start="2025-05-12T23:47:05.372879" elapsed="0.000332"/>
</kw>
<kw name="Random Element" owner="FakerLibrary">
<msg time="2025-05-12T23:47:05.373480" level="INFO">${random_crime} = Assault</msg>
<var>${random_crime}</var>
<arg>${CRIME_TYPES}</arg>
<doc>Generate a randomly sampled object from ``elements``.</doc>
<status status="PASS" start="2025-05-12T23:47:05.373285" elapsed="0.000215"/>
</kw>
<kw name="Random Element" owner="FakerLibrary">
<msg time="2025-05-12T23:47:05.373746" level="INFO">${random_priority} = Medium</msg>
<var>${random_priority}</var>
<arg>${PRIORITY}</arg>
<doc>Generate a randomly sampled object from ``elements``.</doc>
<status status="PASS" start="2025-05-12T23:47:05.373576" elapsed="0.000187"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-05-12T23:47:05.374160" level="INFO">&amp;{random_booking} = { name=Elizabeth Cantu | bookingDate=1994-01-15 | facility=Create List | crimeType=Assault | priority=Medium }</msg>
<var>&amp;{random_booking}</var>
<arg>name=${random_name}</arg>
<arg>bookingDate=${random_date}</arg>
<arg>facility=${random_facility}</arg>
<arg>crimeType=${random_crime}</arg>
<arg>priority=${random_priority}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-05-12T23:47:05.373841" elapsed="0.000338"/>
</kw>
<kw name="Log Dictionary" owner="Collections">
<msg time="2025-05-12T23:47:05.374343" level="INFO">Dictionary size is 5 and it contains following items:
bookingDate: 1994-01-15
crimeType: Assault
facility: Create List
name: Elizabeth Cantu
priority: Medium</msg>
<arg>${random_booking}</arg>
<doc>Logs the size and contents of the ``dictionary`` using given ``level``.</doc>
<status status="PASS" start="2025-05-12T23:47:05.374257" elapsed="0.000116"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-05-12T23:47:05.374571" level="INFO">${random_booking} = {'name': 'Elizabeth Cantu', 'bookingDate': '1994-01-15', 'facility': 'Create List', 'crimeType': 'Assault', 'priority': 'Medium'}</msg>
<arg>${random_booking}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-05-12T23:47:05.374446" elapsed="0.000151"/>
</kw>
<status status="PASS" start="2025-05-12T23:47:05.371971" elapsed="0.002666"/>
</kw>
<kw name="Send Invalid Booking Request" owner="keywords">
<kw name="Remove From Dictionary" owner="Collections">
<msg time="2025-05-12T23:47:05.375058" level="INFO">Removed item with key 'name' and value 'Elizabeth Cantu'.</msg>
<arg>${random_booking}</arg>
<arg>name</arg>
<doc>Removes the given ``keys`` from the ``dictionary``.</doc>
<status status="PASS" start="2025-05-12T23:47:05.374980" elapsed="0.000108"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-05-12T23:47:05.375241" level="INFO">{'bookingDate': '1994-01-15', 'facility': 'Create List', 'crimeType': 'Assault', 'priority': 'Medium'}</msg>
<arg>${random_booking}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-05-12T23:47:05.375157" elapsed="0.000111"/>
</kw>
<kw name="Run Keyword And Expect Error" owner="BuiltIn">
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-05-12T23:47:07.410614" level="INFO">POST Request : url=http://localhost:5000/inmates 
 path_url=/inmates 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '102', 'Content-Type': 'application/json'} 
 body=b'{"bookingDate": "1994-01-15", "facility": "Create List", "crimeType": "Assault", "priority": "Medium"}' 
 </msg>
<msg time="2025-05-12T23:47:07.410788" level="INFO">POST Response : url=http://localhost:5000/inmates 
 status=400, reason=BAD REQUEST 
 headers={'Server': 'Werkzeug/3.1.3 Python/3.13.3', 'Date': 'Tue, 13 May 2025 02:47:07 GMT', 'Content-Type': 'application/json', 'Content-Length': '42', 'Connection': 'close'} 
 body={"error":"Missing required fields: name"}
 
 </msg>
<msg time="2025-05-12T23:47:07.411003" level="FAIL">HTTPError: 400 Client Error: BAD REQUEST for url: http://localhost:5000/inmates</msg>
<arg>jail_mock_api</arg>
<arg>/inmates</arg>
<arg>json=${random_booking}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="FAIL" start="2025-05-12T23:47:05.375430" elapsed="2.038694">HTTPError: 400 Client Error: BAD REQUEST for url: http://localhost:5000/inmates</status>
</kw>
<msg time="2025-05-12T23:47:07.414536" level="INFO">${response} = HTTPError: 400 Client Error: BAD REQUEST for url: http://localhost:5000/inmates</msg>
<var>${response}</var>
<arg>HTTPError: 400 Client Error: BAD REQUEST*</arg>
<arg>POST On Session</arg>
<arg>jail_mock_api</arg>
<arg>/inmates</arg>
<arg>json=${random_booking}</arg>
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<status status="PASS" start="2025-05-12T23:47:05.375337" elapsed="2.039237"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2025-05-12T23:47:07.415028" level="INFO">${response} = HTTPError: 400 Client Error: BAD REQUEST for url: http://localhost:5000/inmates</msg>
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2025-05-12T23:47:07.414779" elapsed="0.000301"/>
</kw>
<status status="PASS" start="2025-05-12T23:47:05.374823" elapsed="2.040329"/>
</kw>
<kw name="Validate POST Error Response" owner="keywords">
<kw name="Should Contain" owner="BuiltIn">
<arg>${response}</arg>
<arg>400</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-05-12T23:47:07.418448" elapsed="0.000166"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${response}</arg>
<arg>BAD REQUEST</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-05-12T23:47:07.418941" elapsed="0.000158"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-05-12T23:47:07.419447" level="INFO">POST Error Response Validation Completed</msg>
<arg>POST Error Response Validation Completed</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-05-12T23:47:07.419221" elapsed="0.000278"/>
</kw>
<status status="PASS" start="2025-05-12T23:47:07.418149" elapsed="0.001432"/>
</kw>
<status status="PASS" start="2025-05-12T23:47:05.371264" elapsed="2.050206"/>
</test>
<test id="s1-t2" name="2.2 Handle Same Name Booking Without Error" line="18">
<kw name="List All Inmate Bookings" owner="keywords">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-05-12T23:47:09.476977" level="INFO">GET Request : url=http://localhost:5000/inmates 
 path_url=/inmates 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-05-12T23:47:09.477183" level="INFO">GET Response : url=http://localhost:5000/inmates 
 status=200, reason=OK 
 headers={'Server': 'Werkzeug/3.1.3 Python/3.13.3', 'Date': 'Tue, 13 May 2025 02:47:09 GMT', 'Content-Type': 'application/json', 'Content-Length': '3138', 'Connection': 'close'} 
 body=[{"bookingDate":"2024-10-30","crimeType":"Vandalism","facility":"Oakwood Depot","id":"4006299f-0092-4f70-8502-68ccfd59b019","name":"Test User 858","priority":"Urgent"},{"bookingDate":"2023-09-12","crimeType":"Theft","facility":"Crestview Labs","id":"0434d088-8821-4204-b2b6-ff17a7e249e3","name":"Test User 582","priority":"Routine"},{"bookingDate":"2024-04-03","crimeType":"Theft","facility":"Crestview Labs","id":"9e458d4a-9e15-485e-9bde-ac8779d613d9","name":"Test User 800","priority":"High"},{"bookingDate":"2024-11-07","crimeType":"Vandalism","facility":"Riverbend Hub","id":"7643e6a3-c61f-4d17-80e5-a3ac02f2677f","name":"Test User 636","priority":"High"},{"bookingDate":"2024-04-23","crimeType":"Vandalism","facility":"Crestview Labs","id":"43138a17-5223-4647-97bd-f9ba35e61153","name":"Test User 155","priority":"Routine"},{"bookingDate":"2023-06-22","crimeType":"Murder","facility":"Riverbend Hub","id":"e7022f88-ae91-46fa-aaa0-6bf8cf778f5d","name":"Test User 555","priority":"Medium"},{"bookingDate":"2023-11-23","crimeType":"Felony","facility":"Crestview Labs","id":"e248fade-66d5-4ee8-9d89-7e53a836bf1b","name":"Test User 310","priority":"High"},{"bookingDate":"2023-12-27","crimeType":"Theft","facility":"Crestview Labs","id":"a6d667b3-df9e-400d-be19-a954f0b66f64","name":"Test User 347","priority":"High"},{"bookingDate":"2023-04-26","crimeType":"Murder","facility":"Valley Annex","id":"bd59ac56-6ce1-4255-acaa-0285b8f16ccc","name":"Test User 21","priority":"Routine"},{"bookingDate":"2023-07-31","crimeType":"Theft","facility":"Crestview Labs","id":"cc5a769e-bfe1-4398-acb3-32d48e020cf2","name":"Test User 894","priority":"Routine"},{"bookingDate":"2024-03-07","crimeType":"Felony","facility":"Oakwood Depot","id":"da409a4a-f2b2-4ffa-9f1c-d1c673857e78","name":"Test User 194","priority":"Urgent"},{"bookingDate":"2023-02-06","crimeType":"Murder","facility":"Summit Center","id":"0794198f-32ed-40a3-affe-16ef960bc42a","name":"Test User 601","priority":"Medium"},{"bookingDate":"2024-07-30","crimeType":"Vandalism","facility":"Summit Center","id":"170272d2-9084-46e8-9541-4425297db783","name":"Test User 784","priority":"Urgent"},{"bookingDate":"2023-12-25","crimeType":"Theft","facility":"Valley Annex","id":"ba347675-e5ec-4d13-94ca-3cf37772d9fb","name":"Test User 467","priority":"Medium"},{"bookingDate":"2023-09-02","crimeType":"Felony","facility":"Oakwood Depot","id":"44f178cd-8bd9-4bc1-a17b-27c54460dc91","name":"Test User 456","priority":"Medium"},{"bookingDate":"1985-12-27","crimeType":"Assault","facility":"Create List","id":"65943ecc-ff73-4799-b13f-a5379d2cb0a0","name":"Glenn Mckinney","priority":"Medium"},{"bookingDate":"2015-11-01","crimeType":"Murder","facility":"Summit Center","id":"9b3d111e-1c9e-4079-8560-ac9f893922da","name":"Alexander Smith","priority":"High"},{"bookingDate":"2024-04-05","crimeType":" Misdemeanor","facility":" County Jail A","id":"28c3a2be-0598-4062-8a52-d7689e823354","name":"Test User 636","priority":"Medium"},{"bookingDate":"2024-04-05","crimeType":" Misdemeanor","facility":" County Jail A","id":"78f565b3-94bd-4442-b3a1-72e5aa6b4bd9","name":"Test User 155","priority":"Medium"}]
 
 </msg>
<msg time="2025-05-12T23:47:09.477619" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>jail_mock_api</arg>
<arg>/inmates</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-05-12T23:47:07.422526" elapsed="2.055156"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2025-05-12T23:47:09.479246" level="INFO">${body} = [{'bookingDate': '2024-10-30', 'crimeType': 'Vandalism', 'facility': 'Oakwood Depot', 'id': '4006299f-0092-4f70-8502-68ccfd59b019', 'name': 'Test User 858', 'priority': 'Urgent'}, {'bookingDate': '202...</msg>
<var>${body}</var>
<arg>${response.json()}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2025-05-12T23:47:09.477965" elapsed="0.001340"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-05-12T23:47:09.479805" level="INFO">All Inmate Booking As String: [{'bookingDate': '2024-10-30', 'crimeType': 'Vandalism', 'facility': 'Oakwood Depot', 'id': '4006299f-0092-4f70-8502-68ccfd59b019', 'name': 'Test User 858', 'priority': 'Urgent'}, {'bookingDate': '2023-09-12', 'crimeType': 'Theft', 'facility': 'Crestview Labs', 'id': '0434d088-8821-4204-b2b6-ff17a7e249e3', 'name': 'Test User 582', 'priority': 'Routine'}, {'bookingDate': '2024-04-03', 'crimeType': 'Theft', 'facility': 'Crestview Labs', 'id': '9e458d4a-9e15-485e-9bde-ac8779d613d9', 'name': 'Test User 800', 'priority': 'High'}, {'bookingDate': '2024-11-07', 'crimeType': 'Vandalism', 'facility': 'Riverbend Hub', 'id': '7643e6a3-c61f-4d17-80e5-a3ac02f2677f', 'name': 'Test User 636', 'priority': 'High'}, {'bookingDate': '2024-04-23', 'crimeType': 'Vandalism', 'facility': 'Crestview Labs', 'id': '43138a17-5223-4647-97bd-f9ba35e61153', 'name': 'Test User 155', 'priority': 'Routine'}, {'bookingDate': '2023-06-22', 'crimeType': 'Murder', 'facility': 'Riverbend Hub', 'id': 'e7022f88-ae91-46fa-aaa0-6bf8cf778f5d', 'name': 'Test User 555', 'priority': 'Medium'}, {'bookingDate': '2023-11-23', 'crimeType': 'Felony', 'facility': 'Crestview Labs', 'id': 'e248fade-66d5-4ee8-9d89-7e53a836bf1b', 'name': 'Test User 310', 'priority': 'High'}, {'bookingDate': '2023-12-27', 'crimeType': 'Theft', 'facility': 'Crestview Labs', 'id': 'a6d667b3-df9e-400d-be19-a954f0b66f64', 'name': 'Test User 347', 'priority': 'High'}, {'bookingDate': '2023-04-26', 'crimeType': 'Murder', 'facility': 'Valley Annex', 'id': 'bd59ac56-6ce1-4255-acaa-0285b8f16ccc', 'name': 'Test User 21', 'priority': 'Routine'}, {'bookingDate': '2023-07-31', 'crimeType': 'Theft', 'facility': 'Crestview Labs', 'id': 'cc5a769e-bfe1-4398-acb3-32d48e020cf2', 'name': 'Test User 894', 'priority': 'Routine'}, {'bookingDate': '2024-03-07', 'crimeType': 'Felony', 'facility': 'Oakwood Depot', 'id': 'da409a4a-f2b2-4ffa-9f1c-d1c673857e78', 'name': 'Test User 194', 'priority': 'Urgent'}, {'bookingDate': '2023-02-06', 'crimeType': 'Murder', 'facility': 'Summit Center', 'id': '0794198f-32ed-40a3-affe-16ef960bc42a', 'name': 'Test User 601', 'priority': 'Medium'}, {'bookingDate': '2024-07-30', 'crimeType': 'Vandalism', 'facility': 'Summit Center', 'id': '170272d2-9084-46e8-9541-4425297db783', 'name': 'Test User 784', 'priority': 'Urgent'}, {'bookingDate': '2023-12-25', 'crimeType': 'Theft', 'facility': 'Valley Annex', 'id': 'ba347675-e5ec-4d13-94ca-3cf37772d9fb', 'name': 'Test User 467', 'priority': 'Medium'}, {'bookingDate': '2023-09-02', 'crimeType': 'Felony', 'facility': 'Oakwood Depot', 'id': '44f178cd-8bd9-4bc1-a17b-27c54460dc91', 'name': 'Test User 456', 'priority': 'Medium'}, {'bookingDate': '1985-12-27', 'crimeType': 'Assault', 'facility': 'Create List', 'id': '65943ecc-ff73-4799-b13f-a5379d2cb0a0', 'name': 'Glenn Mckinney', 'priority': 'Medium'}, {'bookingDate': '2015-11-01', 'crimeType': 'Murder', 'facility': 'Summit Center', 'id': '9b3d111e-1c9e-4079-8560-ac9f893922da', 'name': 'Alexander Smith', 'priority': 'High'}, {'bookingDate': '2024-04-05', 'crimeType': ' Misdemeanor', 'facility': ' County Jail A', 'id': '28c3a2be-0598-4062-8a52-d7689e823354', 'name': 'Test User 636', 'priority': 'Medium'}, {'bookingDate': '2024-04-05', 'crimeType': ' Misdemeanor', 'facility': ' County Jail A', 'id': '78f565b3-94bd-4442-b3a1-72e5aa6b4bd9', 'name': 'Test User 155', 'priority': 'Medium'}]</msg>
<arg>All Inmate Booking As String: ${body}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-05-12T23:47:09.479544" elapsed="0.000678"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-05-12T23:47:09.480711" level="INFO">${body} = [{'bookingDate': '2024-10-30', 'crimeType': 'Vandalism', 'facility': 'Oakwood Depot', 'id': '4006299f-0092-4f70-8502-68ccfd59b019', 'name': 'Test User 858', 'priority': 'Urgent'}, {'bookingDate': '202...</msg>
<arg>${body}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-05-12T23:47:09.480442" elapsed="0.000339"/>
</kw>
<status status="PASS" start="2025-05-12T23:47:07.422264" elapsed="2.058619"/>
</kw>
<kw name="Choose Random Inmate Name" owner="keywords">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-05-12T23:47:09.490012" level="INFO">${inmates} = ['Test User 858', 'Test User 582', 'Test User 800', 'Test User 636', 'Test User 155', 'Test User 555', 'Test User 310', 'Test User 347', 'Test User 21', 'Test User 894', 'Test User 194', 'Test User 60...</msg>
<var>${inmates}</var>
<arg>[booking["name"] for booking in ${body}]</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-05-12T23:47:09.488317" elapsed="0.001771"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-05-12T23:47:09.490966" level="INFO">Available Inmate Names: ['Test User 858', 'Test User 582', 'Test User 800', 'Test User 636', 'Test User 155', 'Test User 555', 'Test User 310', 'Test User 347', 'Test User 21', 'Test User 894', 'Test User 194', 'Test User 601', 'Test User 784', 'Test User 467', 'Test User 456', 'Glenn Mckinney', 'Alexander Smith', 'Test User 636', 'Test User 155']</msg>
<arg>Available Inmate Names: ${inmates}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-05-12T23:47:09.490332" elapsed="0.000731"/>
</kw>
<kw name="Random Element" owner="FakerLibrary">
<msg time="2025-05-12T23:47:09.492045" level="INFO">${chosen_inmate} = Test User 310</msg>
<var>${chosen_inmate}</var>
<arg>${inmates}</arg>
<doc>Generate a randomly sampled object from ``elements``.</doc>
<status status="PASS" start="2025-05-12T23:47:09.491262" elapsed="0.000925"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-05-12T23:47:09.492798" level="INFO">Chosen Inmate Name: Test User 310</msg>
<arg>Chosen Inmate Name: ${chosen_inmate}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-05-12T23:47:09.492564" elapsed="0.000296"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-05-12T23:47:09.493195" level="INFO">${chosen_inmate} = Test User 310</msg>
<arg>${chosen_inmate}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-05-12T23:47:09.493017" elapsed="0.000219"/>
</kw>
<status status="PASS" start="2025-05-12T23:47:09.487706" elapsed="0.005590"/>
</kw>
<kw name="Post New Booking With Same Name" owner="keywords">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-05-12T23:47:09.494333" level="INFO">&amp;{duplicate_inmate} = { name=Test User 310 | bookingDate=2024-04-05 | facility= County Jail A | crimeType= Misdemeanor | priority=Medium }</msg>
<var>&amp;{duplicate_inmate}</var>
<arg>name=${chosen_inmate}</arg>
<arg>bookingDate=2024-04-05</arg>
<arg>facility= County Jail A</arg>
<arg>crimeType= Misdemeanor</arg>
<arg>priority=Medium</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-05-12T23:47:09.494032" elapsed="0.000332"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-05-12T23:47:09.494608" level="INFO">Booking with Duplicate Name: {'name': 'Test User 310', 'bookingDate': '2024-04-05', 'facility': ' County Jail A', 'crimeType': ' Misdemeanor', 'priority': 'Medium'}</msg>
<arg>Booking with Duplicate Name: ${duplicate_inmate}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-05-12T23:47:09.494480" elapsed="0.000167"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2025-05-12T23:47:11.546983" level="INFO">POST Request : url=http://localhost:5000/inmates 
 path_url=/inmates 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '135', 'Content-Type': 'application/json'} 
 body=b'{"name": "Test User 310", "bookingDate": "2024-04-05", "facility": " County Jail A", "crimeType": " Misdemeanor", "priority": "Medium"}' 
 </msg>
<msg time="2025-05-12T23:47:11.547115" level="INFO">POST Response : url=http://localhost:5000/inmates 
 status=201, reason=CREATED 
 headers={'Server': 'Werkzeug/3.1.3 Python/3.13.3', 'Date': 'Tue, 13 May 2025 02:47:11 GMT', 'Content-Type': 'application/json', 'Content-Length': '171', 'Connection': 'close'} 
 body={"bookingDate":"2024-04-05","crimeType":" Misdemeanor","facility":" County Jail A","id":"767c99c5-03f4-4420-9b6f-d5175d1b4ad4","name":"Test User 310","priority":"Medium"}
 
 </msg>
<msg time="2025-05-12T23:47:11.547304" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>jail_mock_api</arg>
<arg>/inmates</arg>
<arg>json=${duplicate_inmate}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2025-05-12T23:47:09.494830" elapsed="2.052509"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-05-12T23:47:11.548375" level="INFO">New Booking With Same Name Successful: {'bookingDate': '2024-04-05', 'crimeType': ' Misdemeanor', 'facility': ' County Jail A', 'id': '767c99c5-03f4-4420-9b6f-d5175d1b4ad4', 'name': 'Test User 310', 'priority': 'Medium'}</msg>
<arg>New Booking With Same Name Successful: ${response.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-05-12T23:47:11.547605" elapsed="0.000841"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-05-12T23:47:11.548896" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-05-12T23:47:11.548645" elapsed="0.000313"/>
</kw>
<status status="PASS" start="2025-05-12T23:47:09.493641" elapsed="2.055405"/>
</kw>
<kw name="Validate POST Successful Response" owner="keywords">
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-05-12T23:47:11.554325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-05-12T23:47:11.553783" elapsed="0.000655"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${response.json()}</arg>
<arg>id</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-05-12T23:47:11.554598" elapsed="0.000602"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-05-12T23:47:11.555436" level="INFO">Validation Completed.</msg>
<arg>Validation Completed.</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-05-12T23:47:11.555338" elapsed="0.000143"/>
</kw>
<status status="PASS" start="2025-05-12T23:47:11.553407" elapsed="0.002133"/>
</kw>
<status status="PASS" start="2025-05-12T23:47:07.421815" elapsed="4.133942"/>
</test>
<test id="s1-t3" name="2.3 Handle Invalid ID Request Error" line="24">
<kw name="Generate Invalid ID Number" owner="keywords">
<kw name="Random Number" owner="FakerLibrary">
<msg time="2025-05-12T23:47:11.557069" level="INFO">${invalid_id} = 3803191275</msg>
<var>${invalid_id}</var>
<arg>digits=10</arg>
<doc>Generate a random integer according to the following rules:</doc>
<status status="PASS" start="2025-05-12T23:47:11.556803" elapsed="0.000298"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-05-12T23:47:11.557425" level="INFO">Invalid ID number: 3803191275</msg>
<arg>Invalid ID number: ${invalid_id}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-05-12T23:47:11.557294" elapsed="0.000174"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-05-12T23:47:11.557714" level="INFO">${invalid_id} = 3803191275</msg>
<arg>${invalid_id}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-05-12T23:47:11.557577" elapsed="0.000173"/>
</kw>
<status status="PASS" start="2025-05-12T23:47:11.556532" elapsed="0.001285"/>
</kw>
<kw name="Get Inmate By Invalid ID" owner="keywords">
<kw name="Run Keyword And Expect Error" owner="BuiltIn">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-05-12T23:47:13.604797" level="INFO">GET Request : url=http://localhost:5000/inmates/3803191275 
 path_url=/inmates/3803191275 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-05-12T23:47:13.604949" level="INFO">GET Response : url=http://localhost:5000/inmates/3803191275 
 status=404, reason=NOT FOUND 
 headers={'Server': 'Werkzeug/3.1.3 Python/3.13.3', 'Date': 'Tue, 13 May 2025 02:47:13 GMT', 'Content-Type': 'application/json', 'Content-Length': '22', 'Connection': 'close'} 
 body={"error":"Not found"}
 
 </msg>
<msg time="2025-05-12T23:47:13.605229" level="FAIL">HTTPError: 404 Client Error: NOT FOUND for url: http://localhost:5000/inmates/3803191275</msg>
<arg>jail_mock_api</arg>
<arg>/inmates/${invalid_id}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="FAIL" start="2025-05-12T23:47:11.558325" elapsed="2.048586">HTTPError: 404 Client Error: NOT FOUND for url: http://localhost:5000/inmates/3803191275</status>
</kw>
<msg time="2025-05-12T23:47:13.607579" level="INFO">${response} = HTTPError: 404 Client Error: NOT FOUND for url: http://localhost:5000/inmates/3803191275</msg>
<var>${response}</var>
<arg>HTTPError: 404 Client Error: NOT FOUND*</arg>
<arg>GET On Session</arg>
<arg>jail_mock_api</arg>
<arg>/inmates/${invalid_id}</arg>
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<status status="PASS" start="2025-05-12T23:47:11.558202" elapsed="2.049433"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-05-12T23:47:13.608225" level="INFO">Expected Error: HTTPError: 404 Client Error: NOT FOUND for url: http://localhost:5000/inmates/3803191275</msg>
<arg>Expected Error: ${response}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-05-12T23:47:13.607916" elapsed="0.000393"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2025-05-12T23:47:13.608805" level="INFO">${response} = HTTPError: 404 Client Error: NOT FOUND for url: http://localhost:5000/inmates/3803191275</msg>
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2025-05-12T23:47:13.608538" elapsed="0.000335"/>
</kw>
<status status="PASS" start="2025-05-12T23:47:11.557996" elapsed="2.050978"/>
</kw>
<kw name="Validate GET Error Response" owner="keywords">
<kw name="Should Contain" owner="BuiltIn">
<arg>${response}</arg>
<arg>404</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-05-12T23:47:13.609920" elapsed="0.000284"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${response}</arg>
<arg>NOT FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-05-12T23:47:13.610399" elapsed="0.000228"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2025-05-12T23:47:13.610959" level="INFO">GET Error Response Validation Completed</msg>
<arg>GET Error Response Validation Completed</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-05-12T23:47:13.610824" elapsed="0.000200"/>
</kw>
<status status="PASS" start="2025-05-12T23:47:13.609416" elapsed="0.001759"/>
</kw>
<status status="PASS" start="2025-05-12T23:47:11.556108" elapsed="2.055356"/>
</test>
<kw name="Delete All Sessions" owner="RequestsLibrary" type="TEARDOWN">
<msg time="2025-05-12T23:47:13.612506" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2025-05-12T23:47:13.612391" elapsed="0.000209"/>
</kw>
<doc>This file contains the test cases for the present mini-project.</doc>
<status status="PASS" start="2025-05-12T23:47:04.814042" elapsed="8.798645"/>
</suite>
<statistics>
<total>
<stat pass="3" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat name="2.Negative Tests" id="s1" pass="3" fail="0" skip="0">2.Negative Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
